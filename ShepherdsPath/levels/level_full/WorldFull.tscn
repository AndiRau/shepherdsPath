[gd_scene load_steps=17 format=2]

[ext_resource path="res://levels/level_full/terrain_v2.tscn" type="PackedScene" id=1]
[ext_resource path="res://src/scenery/weather_manager.gd" type="Script" id=2]
[ext_resource path="res://levels/alm.tscn" type="PackedScene" id=3]
[ext_resource path="res://assets/3D/buildings/stall_exp.glb" type="PackedScene" id=4]
[ext_resource path="res://src/Actors/Sheep/sheep.tscn" type="PackedScene" id=5]
[ext_resource path="res://src/Actors/Sheep/flock.gd" type="Script" id=6]
[ext_resource path="res://src/Actors/Player/PlayerController.tscn" type="PackedScene" id=7]
[ext_resource path="res://levels/level_full/WorldFull.gd" type="Script" id=8]
[ext_resource path="res://src/scenery/PostProcessingSphere.tscn" type="PackedScene" id=9]
[ext_resource path="res://src/Actors/Dog/dog.tscn" type="PackedScene" id=10]
[ext_resource path="res://assets/3D/scenery/flash.tres" type="ArrayMesh" id=11]

[sub_resource type="SphereMesh" id=1]
flip_faces = true
radius = 3500.0
height = 1700.0
radial_segments = 24
rings = 16
is_hemisphere = true

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode unshaded;

uniform float ammount  = 1.0;
uniform float softness = 1.0;
uniform vec4 color : hint_color;
uniform float speed = 0.5;
uniform int quality = 2;
uniform float scale = 1.0;

vec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}
vec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}

float snoise(vec3 v){ 
  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;
  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);

// First corner
  vec3 i  = floor(v + dot(v, C.yyy) );
  vec3 x0 =   v - i + dot(i, C.xxx) ;

// Other corners
  vec3 g = step(x0.yzx, x0.xyz);
  vec3 l = 1.0 - g;
  vec3 i1 = min( g.xyz, l.zxy );
  vec3 i2 = max( g.xyz, l.zxy );

  //  x0 = x0 - 0. + 0.0 * C 
  vec3 x1 = x0 - i1 + 1.0 * C.xxx;
  vec3 x2 = x0 - i2 + 2.0 * C.xxx;
  vec3 x3 = x0 - 1. + 3.0 * C.xxx;

// Permutations
  i = mod(i, 289.0 ); 
  vec4 p = permute( permute( permute( 
             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))
           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) 
           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));

// Gradients
// ( N*N points uniformly over a square, mapped onto an octahedron.)
  float n_ = 1.0/7.0; // N=7
  vec3  ns = n_ * D.wyz - D.xzx;

  vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)

  vec4 x_ = floor(j * ns.z);
  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)

  vec4 x = x_ *ns.x + ns.yyyy;
  vec4 y = y_ *ns.x + ns.yyyy;
  vec4 h = 1.0 - abs(x) - abs(y);

  vec4 b0 = vec4( x.xy, y.xy );
  vec4 b1 = vec4( x.zw, y.zw );

  vec4 s0 = floor(b0)*2.0 + 1.0;
  vec4 s1 = floor(b1)*2.0 + 1.0;
  vec4 sh = -step(h, vec4(0.0));

  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;
  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;

  vec3 p0 = vec3(a0.xy,h.x);
  vec3 p1 = vec3(a0.zw,h.y);
  vec3 p2 = vec3(a1.xy,h.z);
  vec3 p3 = vec3(a1.zw,h.w);

//Normalise gradients
  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));
  p0 *= norm.x;
  p1 *= norm.y;
  p2 *= norm.z;
  p3 *= norm.w;

// Mix final noise value
  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);
  m = m * m;
  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), 
                                dot(p2,x2), dot(p3,x3) ) );
}

float fbm(vec3 p, int octaves, float lacunarity, float gain) {
    
    float v = 0.0;
    float amp = 0.5;
    vec3 pp = p;
    
    for (int i = 0; i < octaves; i++) {
        v += amp * snoise(pp);
        pp *= lacunarity;
        amp *= gain;
    }

    return v;
}

float remap(float value, float from1, float to1, float from2, float to2) {
    return (value - from1) / (to1 - from1) * (to2 - from2) + from2;
}

void fragment() {
	vec3 vpos = (CAMERA_MATRIX * vec4(VERTEX, 1.0)).xyz;
	float y = clamp(remap(vpos.y, 300.0, 550.0, 0.0, 1.0), 0.0, 1.0);
	float n = fbm(vpos * vec3(1.0, 3.0, 1.0) * 0.001 * scale + vec3(TIME * speed, TIME * speed, 0.0), quality, 2.0, 0.5);
	float amm = 1.0-ammount*2.0;
	float dens = amm + softness;
	n = remap(n, amm, 1.0, 0.0, 1.0) * y;
	n = pow(n, softness);
	ALPHA = clamp(n, 0.0, 1.0);
	ALBEDO = vec3(5.0) * color.rgb;
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/ammount = 1.034
shader_param/softness = 3.0
shader_param/color = Color( 1, 1, 1, 1 )
shader_param/speed = 0.05
shader_param/quality = 4
shader_param/scale = 0.817

[sub_resource type="Animation" id=7]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:light_energy")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Flash:mesh:surface_1/material:albedo_color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Flash:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 40, 40, 13.546 ) ]
}

[sub_resource type="Animation" id=8]
resource_name = "thunder"
tracks/0/type = "value"
tracks/0/path = NodePath(".:light_energy")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.0426703, 0.256729 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 16.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Flash:mesh:surface_1/material:albedo_color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.0432224, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Flash:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 13.5459, 13.5459, 13.5459 ), Vector3( 40, 40, 13.546 ) ]
}

[node name="Spatial" type="Spatial"]
script = ExtResource( 8 )

[node name="Terrain" parent="." instance=ExtResource( 1 )]

[node name="alm" parent="." instance=ExtResource( 3 )]
transform = Transform( 0.37472, 0, 0.927138, 0, 1, 0, -0.927138, 0, 0.37472, 1243.45, -16.5829, -564.905 )

[node name="stall_exp" parent="." instance=ExtResource( 4 )]
transform = Transform( 8.93484, 0, 3.47654, 0, 9.58737, 0, -3.47654, 0, 8.93484, 1281.85, -11.8869, -643.479 )

[node name="flock" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1375.58, -5.75946, -602.352 )
script = ExtResource( 6 )
Sheep = ExtResource( 5 )
target_flag_path = NodePath("../target")

[node name="dog" parent="." instance=ExtResource( 10 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1375.58, -13.857, -602.352 )

[node name="target" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 772.965, 0, -258.178 )

[node name="OculusFirstPerson" parent="." instance=ExtResource( 7 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1302.26, -4.19472, -393.963 )

[node name="WeatherManager" type="Node" parent="."]
script = ExtResource( 2 )

[node name="PostProcessingSphere" parent="WeatherManager" instance=ExtResource( 9 )]
skeleton = NodePath("../..")

[node name="Clouds" type="MeshInstance" parent="WeatherManager"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1292.14, -61.1068, -1439.55 )
cast_shadow = 0
mesh = SubResource( 1 )
skeleton = NodePath("../..")
material/0 = SubResource( 3 )

[node name="lightning_timer" type="Timer" parent="WeatherManager"]

[node name="weather_timer" type="Timer" parent="WeatherManager"]

[node name="lightning" type="DirectionalLight" parent="WeatherManager"]
light_energy = 0.0

[node name="Flash" type="MeshInstance" parent="WeatherManager/lightning"]
transform = Transform( 1.74846e-06, -2.64009e-13, 13.546, -6.03983e-06, -40, -1.01645e-20, 40, -6.03983e-06, -5.92114e-07, 195.442, 440.898, 0 )
cast_shadow = 0
mesh = ExtResource( 11 )
material/0 = null

[node name="AnimationPlayer" type="AnimationPlayer" parent="WeatherManager/lightning"]
anims/RESET = SubResource( 7 )
anims/thunder = SubResource( 8 )

[connection signal="timeout" from="WeatherManager/lightning_timer" to="WeatherManager" method="_on_lightning_timer_timeout"]
[connection signal="timeout" from="WeatherManager/weather_timer" to="WeatherManager" method="_on_weather_timer_timeout"]
